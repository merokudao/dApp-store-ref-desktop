import React, { useEffect, useState } from "react";
import { useAccount } from "wagmi";
import * as PushAPI from "@pushprotocol/restapi";
import { ENV } from "@pushprotocol/restapi/src/lib/constants";

const NotificationComponent = () => {
  const { address } = useAccount();
  const [notification, setNotification] = useState<string[]>([]);

  const getNotifications = async () => {
    try {
      const notifications = await PushAPI.user.getFeeds({
        user: `eip155:5:${address}`,
        env: ENV.STAGING,
      });

      let arr = [];

      notifications.forEach((notification) => {
        if (
          notification.app ==
          `${process.env.NEXT_PUBLIC_DAPPSTORE_CHANNEL_NAME}`
        ) {
          arr.push(notification.message);
        }
      });

      setNotification(arr.slice(0, 5));
    } catch (err) {
      console.error("Error: ", err);
    }
  };

  useEffect(() => {
    getNotifications();
  }, []);

  const [isOpen, setIsOpen] = useState(false);

  const notifications = notification;

  const toggleOpen = () => setIsOpen(!isOpen);

  return (
    <div className="relative">
      <button
        className="text-white font-bold uppercase text-sm px-6 py-3 rounded shadow hover:shadow-lg outline-none focus:outline-none mr-1 mb-1"
        type="button"
        style={{ transition: "all .15s ease" }}
        onClick={toggleOpen}
      >
        <svg
          width="22"
          height="22"
          viewBox="0 0 24 24"
          fill="none"
          xmlns="http://www.w3.org/2000/svg"
        >
          <path
            d="M11.9477 25.4893C12.6375 25.4897 13.3126 25.289 13.8909 24.9116C14.4692 24.5341 14.9257 23.9961 15.205 23.3631C15.2357 23.2927 15.2485 23.2158 15.2422 23.1392C15.2359 23.0627 15.2106 22.9889 15.1687 22.9246C15.1268 22.8603 15.0695 22.8076 15.0021 22.7711C14.9348 22.7346 14.8594 22.7156 14.7828 22.7158H9.11516C9.0386 22.7156 8.96322 22.7346 8.89583 22.7711C8.82845 22.8076 8.7712 22.8603 8.72928 22.9246C8.68735 22.9889 8.66208 23.0627 8.65575 23.1392C8.64942 23.2158 8.66222 23.2927 8.69302 23.3631C8.97237 23.9955 9.42857 24.533 10.0063 24.9104C10.584 25.2878 11.2584 25.4889 11.9477 25.4893Z"
            fill="white"
          ></path>
          <path
            d="M20.6433 19.2739C20.4242 19.2739 20.2072 19.2306 20.0048 19.1464C19.8023 19.0622 19.6184 18.9388 19.4635 18.7833C19.3087 18.6277 19.1859 18.443 19.1021 18.2398C19.0184 18.0366 18.9754 17.8188 18.9755 17.5989V11.6898C18.9755 8.59473 17.0303 5.87622 14.2708 4.87983C14.1319 4.83096 14.0048 4.75365 13.8973 4.6528C13.7899 4.55195 13.7045 4.42976 13.6467 4.29402C13.5089 3.95609 13.2741 3.66688 12.9723 3.46309C12.6704 3.2593 12.315 3.15012 11.9512 3.14942C11.5873 3.14872 11.2315 3.25652 10.9289 3.45915C10.6262 3.66178 10.3904 3.95009 10.2513 4.28748C10.1948 4.42148 10.1108 4.54207 10.0049 4.64141C9.89892 4.74075 9.77336 4.81663 9.63631 4.86413C8.25892 5.34503 7.06489 6.24437 6.21994 7.43729C5.37498 8.63021 4.92103 10.0575 4.9211 11.5212V17.5976C4.9218 18.0399 4.74801 18.4645 4.43771 18.7786C4.12741 19.0928 3.70584 19.2708 3.26511 19.2739C3.16132 19.2727 3.05829 19.2921 2.96195 19.3309C2.86562 19.3697 2.77785 19.4271 2.70366 19.5C2.62948 19.5729 2.57034 19.6597 2.52964 19.7556C2.48893 19.8514 2.46745 19.9543 2.46643 20.0585C2.46643 20.2666 2.54879 20.4661 2.69539 20.6133C2.842 20.7604 3.04084 20.8431 3.24817 20.8431H20.6394C20.8467 20.8431 21.0455 20.7604 21.1921 20.6133C21.3387 20.4661 21.4211 20.2666 21.4211 20.0585C21.4211 19.8511 21.3393 19.6521 21.1935 19.5051C21.0478 19.3581 20.8499 19.275 20.6433 19.2739Z"
            fill="white"
          ></path>
          <path
            d="M16.9834 3.40378C17.9437 3.61677 18.8123 4.1289 19.4651 4.86701C20.118 5.60511 20.5217 6.53142 20.6185 7.51358C20.6284 7.62039 20.6801 7.71891 20.7623 7.78745C20.8445 7.85599 20.9505 7.88894 21.0569 7.87906C21.1634 7.86917 21.2615 7.81726 21.3298 7.73474C21.3981 7.65223 21.431 7.54586 21.4211 7.43904C21.3131 6.28373 20.8411 5.19302 20.0736 4.32516C19.3061 3.45731 18.283 2.85746 17.1528 2.61267C17.125 2.60641 17.0966 2.60334 17.0681 2.60352C16.9695 2.60506 16.8748 2.64277 16.802 2.70955C16.7291 2.77634 16.6832 2.86756 16.6727 2.96602C16.6623 3.06448 16.6882 3.16336 16.7454 3.244C16.8026 3.32465 16.8873 3.38148 16.9834 3.40378Z"
            fill="white"
          ></path>
          <path
            d="M17.4355 0.800298C18.9308 1.13057 20.2836 1.92706 21.3005 3.07581C22.3173 4.22456 22.946 5.66668 23.0967 7.1958C23.1014 7.24865 23.1165 7.30004 23.1411 7.34702C23.1657 7.394 23.1993 7.43564 23.24 7.46954C23.2807 7.50345 23.3276 7.52894 23.3782 7.54457C23.4287 7.5602 23.4818 7.56566 23.5344 7.56062C23.5872 7.55602 23.6386 7.54098 23.6855 7.51637C23.7325 7.49176 23.7741 7.45806 23.808 7.41721C23.842 7.37637 23.8675 7.32919 23.8831 7.27839C23.8988 7.2276 23.9043 7.17419 23.8993 7.12126C23.7398 5.41902 23.0442 3.812 21.9134 2.53321C20.7826 1.25443 19.2753 0.370365 17.6101 0.00919648C17.5822 0.00363673 17.5539 0.000574666 17.5254 4.42849e-05C17.425 -0.00144734 17.3277 0.034789 17.2525 0.101642C17.1773 0.168495 17.1297 0.261136 17.1191 0.361376C17.1085 0.461615 17.1356 0.562215 17.1951 0.643424C17.2546 0.724633 17.3422 0.780585 17.4407 0.800298H17.4355Z"
            fill="white"
          ></path>
          <path
            d="M6.91191 3.40381C7.01041 3.3841 7.09801 3.32815 7.15751 3.24694C7.21702 3.16573 7.24413 3.06513 7.23352 2.96489C7.22291 2.86465 7.17535 2.77201 7.10018 2.70516C7.025 2.6383 6.92765 2.60207 6.82722 2.60356C6.79874 2.60344 6.77033 2.60651 6.74253 2.61271C5.61233 2.8575 4.58925 3.45734 3.82174 4.3252C3.05423 5.19305 2.58223 6.28377 2.47421 7.43908C2.46485 7.54599 2.49812 7.65227 2.56672 7.7346C2.60006 7.77582 2.64137 7.80982 2.68817 7.83454C2.73498 7.85927 2.7863 7.8742 2.83903 7.87844C2.89177 7.88366 2.94502 7.87834 2.9957 7.86279C3.04639 7.84725 3.09351 7.82178 3.13433 7.78786C3.17515 7.75394 3.20886 7.71224 3.23354 7.66517C3.25822 7.6181 3.27337 7.56659 3.27811 7.51361C3.37451 6.53149 3.77788 5.60512 4.43054 4.86696C5.0832 4.12881 5.95173 3.61668 6.91191 3.40381Z"
            fill="white"
          ></path>
          <path
            d="M6.46009 0.800298C6.55859 0.780585 6.64618 0.724632 6.70569 0.643423C6.76519 0.562215 6.7923 0.461615 6.7817 0.361375C6.77109 0.261136 6.72353 0.168495 6.64835 0.101642C6.57318 0.034789 6.47583 -0.00144734 6.3754 4.42848e-05C6.34738 0.000502857 6.31946 0.00356601 6.29201 0.00919648C4.62684 0.370365 3.11958 1.25443 1.98876 2.53321C0.857949 3.81199 0.162371 5.41901 0.00288077 7.12126C-0.00229552 7.17413 0.00310762 7.22751 0.0187695 7.27826C0.0344313 7.329 0.0600299 7.3761 0.0940778 7.41678C0.127408 7.458 0.168735 7.492 0.215541 7.51672C0.262348 7.54144 0.313672 7.55638 0.366397 7.56062C0.419139 7.56584 0.472389 7.56052 0.523073 7.54497C0.573757 7.52943 0.620858 7.50396 0.661682 7.47004C0.702505 7.43612 0.736232 7.39442 0.760911 7.34735C0.785589 7.30028 0.800741 7.24877 0.805475 7.19579C0.95569 5.66755 1.58344 4.22609 2.59902 3.07745C3.6146 1.9288 4.96602 1.13178 6.46009 0.800298Z"
            fill="white"
          ></path>
        </svg>
      </button>

      {isOpen && (
        <div className="absolute right-0 w-[45vw] mt-2 py-2 bg-black border rounded shadow-xl">
          {notifications.map((notification, index) => (
            <a
              href="#"
              className="transition-colors duration-200 block px-4 py-2 rounded hover:bg-gray-100 hover:text-black"
              key={index}
            >
              {notification}
            </a>
          ))}
        </div>
      )}
    </div>
  );
};

export default NotificationComponent;
